{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/webpack2-multi-pages","result":{"data":{"markdownRemark":{"id":"2801f728-d4ec-564b-b397-ee1cee102000","html":"<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>接触前端几个月，开始在做基于Vuejs2的移动端网页应用。单页应用做的真爽，Vue的数据绑定(MVVM)写的不亦乐乎，轻松愉快就可以写出一个完整的单页项目出来。</p>\n<p>然后问题来了，公司的一个新移动端项目也要整合进来。出于上线时间较为紧急的考虑，就直接在项目的router中添加了新项目的路由，代码拷贝了一份。上线后，小问题不断。。。新老项目出现了相互影响的问题。所以，经过了讨论决定，将两个项目发布为两个单页应用，共享同一个项目。</p>\n<h2 id=\"webpack2打包多个单页应用\" style=\"position:relative;\"><a href=\"#webpack2%E6%89%93%E5%8C%85%E5%A4%9A%E4%B8%AA%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8\" aria-label=\"webpack2打包多个单页应用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webpack2打包多个单页应用</h2>\n<p>研究了一下Vue的编译发布，实际上是进行了<code class=\"language-text\">node build/build.js</code>。其中在webpack.prod.conf.js中，HtmlWebpackPlugin插件用于生成输出的页面。</p>\n<p>下面是一个入口页的HtmlWebpackPlugin配置。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// generate dist index.html with correct asset hash for caching.</span>\n    <span class=\"token comment\">// you can customize output by editing /index.html</span>\n    <span class=\"token comment\">// see https://github.com/ampedandwired/html-webpack-plugin</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      filename<span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      inject<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      minify<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        removeComments<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        removeAttributeQuotes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token comment\">// more options:</span>\n        <span class=\"token comment\">// https://github.com/kangax/html-minifier#options-quick-reference</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span>\n      chunksSortMode<span class=\"token operator\">:</span> <span class=\"token string\">'dependency'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">]</span></code></pre></div>\n<p>实现多页应用，只需再<code class=\"language-text\">new HtmlWebpackPlugin</code>就可以了。</p>\n<h3 id=\"具体的实现代码\" style=\"position:relative;\"><a href=\"#%E5%85%B7%E4%BD%93%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81\" aria-label=\"具体的实现代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>具体的实现代码</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// generate dist index.html with correct asset hash for caching.</span>\n    <span class=\"token comment\">// you can customize output by editing /index.html</span>\n    <span class=\"token comment\">// see https://github.com/ampedandwired/html-webpack-plugin</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      filename<span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      inject<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      minify<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        removeComments<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        removeAttributeQuotes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token comment\">// more options:</span>\n        <span class=\"token comment\">// https://github.com/kangax/html-minifier#options-quick-reference</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span>\n      chunksSortMode<span class=\"token operator\">:</span> <span class=\"token string\">'dependency'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      filename<span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>index2<span class=\"token punctuation\">,</span> <span class=\"token comment\">// => 输出页的fileName config/index.js的build中新建index2属性</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      inject<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      minify<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        removeComments<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        removeAttributeQuotes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token comment\">// more options:</span>\n        <span class=\"token comment\">// https://github.com/kangax/html-minifier#options-quick-reference</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span>\n      chunksSortMode<span class=\"token operator\">:</span> <span class=\"token string\">'dependency'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">]</span></code></pre></div>\n<p>这边只是简单地创建一个新的输出页(内容和默认的index.html一致)，HtmlWebpackPlugin还有其他属性可自行配置：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">类型</th>\n<th align=\"center\">默认值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">title</td>\n<td align=\"center\">String</td>\n<td align=\"center\"><code class=\"language-text\">&#39;&#39;</code></td>\n<td align=\"center\">生成html页面的title</td>\n</tr>\n<tr>\n<td align=\"center\">filename</td>\n<td align=\"center\">String</td>\n<td align=\"center\"><code class=\"language-text\">index.html</code></td>\n<td align=\"center\">生成页的路径地址</td>\n</tr>\n<tr>\n<td align=\"center\">template</td>\n<td align=\"center\">String</td>\n<td align=\"center\"><code class=\"language-text\">&#39;&#39;</code></td>\n<td align=\"center\">编译使用的的模板文件</td>\n</tr>\n<tr>\n<td align=\"center\">inject</td>\n<td align=\"center\">String|Boolean</td>\n<td align=\"center\">true</td>\n<td align=\"center\">js在template的注入位置 true|‘body’=>body底部 ‘head’=>head里 false=>不插入js</td>\n</tr>\n<tr>\n<td align=\"center\">favicon</td>\n<td align=\"center\">String</td>\n<td align=\"center\"><code class=\"language-text\">&#39;&#39;</code></td>\n<td align=\"center\">网站图标文件路径</td>\n</tr>\n<tr>\n<td align=\"center\">meta</td>\n<td align=\"center\">Object</td>\n<td align=\"center\"><code class=\"language-text\">{}</code></td>\n<td align=\"center\">html的meta标签 比如<code class=\"language-text\">meta: {viewport: &#39;width=device-width, initial-scale=1, shrink-to-fit=no&#39;}</code></td>\n</tr>\n<tr>\n<td align=\"center\">minify</td>\n<td align=\"center\">Boolean|Object</td>\n<td align=\"center\"><code class=\"language-text\">true</code></td>\n<td align=\"center\">true|false或minify参数配置<a href=\"https://github.com/kangax/html-minifier#options-quick-reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">html-minifier</a></td>\n</tr>\n<tr>\n<td align=\"center\">hash</td>\n<td align=\"center\">Boolean</td>\n<td align=\"center\"><code class=\"language-text\">false</code></td>\n<td align=\"center\">js是否生成hash(Webpack编译后是否在文件名后添加文件hash) 避免文件缓存用</td>\n</tr>\n<tr>\n<td align=\"center\">cache</td>\n<td align=\"center\">Boolean</td>\n<td align=\"center\"><code class=\"language-text\">true</code></td>\n<td align=\"center\">文件变化才编译出文件</td>\n</tr>\n<tr>\n<td align=\"center\">showErrors</td>\n<td align=\"center\">Boolean</td>\n<td align=\"center\"><code class=\"language-text\">true</code></td>\n<td align=\"center\">是否在生成的html中显示error详情</td>\n</tr>\n<tr>\n<td align=\"center\">chunks</td>\n<td align=\"center\">{?}</td>\n<td align=\"center\"><code class=\"language-text\">?</code></td>\n<td align=\"center\">需要包含的chunks</td>\n</tr>\n<tr>\n<td align=\"center\">chunksSortMode</td>\n<td align=\"center\">String|Function</td>\n<td align=\"center\"><code class=\"language-text\">auto</code></td>\n<td align=\"center\">chunk在生成网页中的的排序模式 可选值’none’ | ‘auto’ | ‘dependency’ | ‘manual’ | {Function}</td>\n</tr>\n<tr>\n<td align=\"center\">excludeChunks</td>\n<td align=\"center\">Array</td>\n<td align=\"center\"><code class=\"language-text\">&#39;&#39;</code></td>\n<td align=\"center\">编译中需要排除的chunks</td>\n</tr>\n<tr>\n<td align=\"center\">xhtml</td>\n<td align=\"center\">Boolean</td>\n<td align=\"center\"><code class=\"language-text\">false</code></td>\n<td align=\"center\"><code class=\"language-text\">true</code>=><code class=\"language-text\">link</code>标签闭合(符合xhtml规范)</td>\n</tr>\n</tbody>\n</table>\n<p>具体的使用方式可以在<a href=\"https://github.com/jantimon/html-webpack-plugin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/jantimon/html-webpack-plugin</a>上查看</p>\n<h2 id=\"开发模式的多应用配置\" style=\"position:relative;\"><a href=\"#%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%A4%9A%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE\" aria-label=\"开发模式的多应用配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开发模式的多应用配置</h2>\n<p>本地通常是执行npm run dev进行开发调试。npm run dev时实际运行了node build/dev-server.js。研究脚本可知在启动时会读取webpack.dev.conf.js的配置。\n文件中有下面这段代码，在编译时将index.html编译挂载。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      inject<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>对于多页应用，只需在每次执行时，将template改为需要启动的页面即可。</p>\n<p>当然，这种做法感觉有点笨拙，我们可以这样:</p>\n<ol>\n<li>在package.json中定义一个新的script，比如<code class=\"language-text\">dev-new</code>;</li>\n<li>定义<code class=\"language-text\">dev</code>和<code class=\"language-text\">dev-new</code>的HtmlWebpackPlugin;</li>\n<li>执行<code class=\"language-text\">npm run dev</code>时将2中定义的<code class=\"language-text\">dev</code>的HtmlWebpackPlugin加载到webpack.dev.conf.js的plugin中即可</li>\n<li>执行<code class=\"language-text\">npm run dev-new</code>时将2中定义的<code class=\"language-text\">dev-new</code>的HtmlWebpackPlugin加载到webpack.dev.conf.js的plugin中即可</li>\n</ol>\n<p>Ps: 为了完全的拆分，可以在webpack.base.conf.js中的entry新建一个入口、新建入口配置文件、新建router文件、HtmlWebpackPlugin配置chunks…</p>\n<p>这样，就完成了Vuejs2中多页应用的简单配置。</p>","fields":{"slug":"/posts/webpack2-multi-pages","tagSlugs":["/tag/webpack/","/tag/vue/","/tag/html-webpack-plugin/"]},"frontmatter":{"date":"2017-05-13 15:27:37","description":"","tags":["webpack","vue","html-webpack-plugin"],"title":"Webpack2中多页应用的实现","socialImage":null}}},"pageContext":{"slug":"/posts/webpack2-multi-pages"}}}