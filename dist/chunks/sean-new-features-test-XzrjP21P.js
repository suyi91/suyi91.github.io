const id = "new-features-test.md";
						const collection = "blog";
						const slug = "new-features-test";
						const body = "\n### Support collapse\n\n```bash\n:::collapse\nHello World!\n:::\n```\n\n\n:::collapse\nHello World!\n:::\n\n### Support admonitions\n\n```markdown\n:::tip[Customized Title]\nhello world\n:::\n\n:::note\nnote\n:::\n\n:::caution\ncaution\n:::\n\n:::danger\ndanger\n:::\n\n```\n\n:::tip[Customized Title]\nhello world\n:::\n\n:::note\nnote\n\n```js\nconsole.log('hello world')\n```\n\n:::\n\n:::caution\ncaution\n:::\n\n:::danger\ndanger\n:::\n\n\n### Support mermaid\n\nUse:\n\n+ start with **```mermaid**\n+ end with **```**\n+ set markdown frontmatter `mermaid: true`.\n\nMermaid Code:\n\n```html title=\"mermaid.md\"\nclassDiagram\n    note \"From Duck till Zebra\"\n    Animal <|-- Duck\n    note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\"\n    Animal <|-- Fish\n    Animal <|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n        +String beakColor\n        +swim()\n        +quack()\n    }\n    class Fish{\n        -int sizeInFeet\n        -canEat()\n    }\n    class Zebra{\n        +bool is_wild\n        +run()\n    }\n```\n\nResult:\n\n```mermaid\nclassDiagram\n    note \"From Duck till Zebra\"\n    Animal <|-- Duck\n    note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\"\n    Animal <|-- Fish\n    Animal <|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n        +String beakColor\n        +swim()\n        +quack()\n    }\n    class Fish{\n        -int sizeInFeet\n        -canEat()\n    }\n    class Zebra{\n        +bool is_wild\n        +run()\n    }\n```\n\n### Support mathjax\n\n+ set markdown frontmatter `mathjax: true`.\n\n#### Block Mode\n\n```yaml title=\"Mathjax.md\"\n---\nmathjax: true\n---\nhello!\n$$ \\sum_{i=0}^N\\int_{a}^{b}g(t,i)\\text{d}t $$\nhello!\n```\n\nhello! \n$$ \\sum_{i=0}^N\\int_{a}^{b}g(t,i)\\text{d}t $$\nhello!\n\n#### Inline Mode\n\n```yaml title=\"Mathjax.md\"\n---\nmathjax: true\n---\nhello! $ \\sum_{i=0}^N\\int_{a}^{b}g(t,i)\\text{d}t $ hello!\n```\n\nhello! $ \\sum_{i=0}^N\\int_{a}^{b}g(t,i)\\text{d}t $ hello!\n\n### Integration with Expressive Code\n\nFor more usage, please refer to the official website [expressive-code](https://expressive-code.com/).\n\n```js title=\"line-markers.js\" del={2} ins={3-4} {6}\nfunction demo() {\n  console.log('this line is marked as deleted')\n  // This line and the next one are marked as inserted\n  console.log('this is the second inserted line')\n\n  return 'this line uses the neutral default marker type'\n}\n```\n\n### Code folding is supported by default\n\n```js\nvar myArr = [1,2]\nconsole.log(myArr)\n\nvar myObj = {a: 1, b: 2}\n\nfor(let key of myArr){\n  console.log(key)\n}\n\nvar it = myArr[Symbol.iterator]()\nit.next() // {value: 1, done: false}\n\n// VM704:12 Uncaught TypeError: myObj is not iterable\nfor(let key of myObj){\n  console.log(key)\n}\n\n```\n";
						const data = {title:"New features test",description:"More new features specific to this theme.",date:new Date(1711238400000),category:"uncategorized",sticky:0,mathjax:true,mermaid:true,draft:false,toc:true,donate:true,comment:true};
						const _internal = {
							type: 'content',
							filePath: "/Users/sean/my-astro-blog/src/content/blog/new-features-test.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
